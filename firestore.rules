rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // No deletion of users for now
    }

    // Jobs collection
    match /jobs/{jobId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'cliente';
      allow update: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
      allow delete: if false; // No deletion of jobs for now
    }

    // Proposals collection
    match /proposals/{proposalId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.providerId || request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.clientId);
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'prestador';
      allow update: if request.auth != null && (request.auth.uid == resource.data.providerId || request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.clientId);
      allow delete: if false;
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.chatId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.chatId)).data.providerId);
      allow create: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.chatId)).data.clientId || request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.chatId)).data.providerId);
      allow update: if false;
      allow delete: if false;
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // System can create notifications
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if false;
    }

    // Escrows collection
    match /escrows/{escrowId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
      allow create: if request.auth != null; // Only system/backend should create
      allow update: if request.auth != null; // Only system/backend should update
      allow delete: if false;
    }

    // Fraud Alerts collection
    match /fraud_alerts/{alertId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
      allow create: if request.auth != null; // Only system/backend should create
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
      allow delete: if false;
    }

    // Disputes collection
    match /disputes/{disputeId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.initiatorId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin');
      allow create: if request.auth != null;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
      allow delete: if false;
    }

    // Maintained Items collection
    match /maintained_items/{itemId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.clientId;
      allow create: if request.auth != null && request.auth.uid == resource.data.clientId;
      allow update: if request.auth != null && request.auth.uid == resource.data.clientId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.clientId;
    }

    // Bids collection
    match /bids/{bidId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.providerId || request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.clientId);
      allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'prestador';
      allow update: if request.auth != null && request.auth.uid == resource.data.providerId;
      allow delete: if false;
    }
  }
}
