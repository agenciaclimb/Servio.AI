name: Deploy to Cloud Run

on:
  # Torna o deploy explícito e previsível: execute manualmente
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch ou tag para deploy"
        required: false
        default: "feature/full-implementation"
  # (Opcional) Publique versões marcadas com tag v*
  push:
    tags:
      - "v*"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  SERVICE: ${{ secrets.GCP_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Evita execuções concorrentes que causam erros de IAM/Cloud Build
    concurrency:
      group: deploy-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Validate required secrets and inputs
        shell: bash
        env:
          GH_GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GH_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GH_FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          GH_GCP_STORAGE_BUCKET: ${{ secrets.GCP_STORAGE_BUCKET }}
          GH_STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: |
          set -euo pipefail
          missing=()
          # Infra
          [[ -z "${PROJECT_ID:-}" ]] && missing+=("GCP_PROJECT_ID")
          [[ -z "${REGION:-}" ]] && missing+=("GCP_REGION")
          [[ -z "${SERVICE:-}" ]] && missing+=("GCP_SERVICE")
          [[ -z "${GH_GCP_SA_KEY:-}" ]] && missing+=("GCP_SA_KEY")
          # App (não bloqueia o deploy, mas avisamos)
          app_missing=()
          [[ -z "${GH_GEMINI_API_KEY:-}" ]] && app_missing+=("GEMINI_API_KEY")
          [[ -z "${GH_FRONTEND_URL:-}" ]] && app_missing+=("FRONTEND_URL")
          [[ -z "${GH_GCP_STORAGE_BUCKET:-}" ]] && app_missing+=("GCP_STORAGE_BUCKET")
          [[ -z "${GH_STRIPE_SECRET_KEY:-}" ]] && app_missing+=("STRIPE_SECRET_KEY")

          if (( ${#missing[@]} > 0 )); then
            echo "::error::Secrets obrigatórios ausentes: ${missing[*]}"
            echo "Adicione-os em Settings → Secrets and variables → Actions. Consulte GITHUB_SECRETS.md."
            exit 1
          fi
          if (( ${#app_missing[@]} > 0 )); then
            echo "::warning::Secrets de aplicação ausentes (o deploy continuará): ${app_missing[*]}"
          fi

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          # Para futura migração a Workload Identity Federation (mais seguro):
          # workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          # service_account: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 462.0.0"

      - name: GCloud info (preflight)
        run: |
          set -x
          gcloud --version
          gcloud auth list
          gcloud config list
          echo "Project: $PROJECT_ID / Region: $REGION / Service: $SERVICE"
          echo "Verificando APIs necessárias..."
          gcloud services list --enabled --project "$PROJECT_ID" | grep -E "(run.googleapis.com|cloudbuild.googleapis.com|artifactregistry.googleapis.com)" || true

      - name: Build & Deploy via Cloud Build (Dockerfile → Artifact Registry → Cloud Run)
        run: |
          set -eo pipefail
          SUB_SHA="${GITHUB_SHA::7}"
          echo "Usando SHORT_SHA=$SUB_SHA"
          gcloud builds submit \
            --project "$PROJECT_ID" \
            --config cloudbuild.yaml \
            --substitutions=_REGION="$REGION",_SERVICE="$SERVICE",_REPO="servio-ai",_IMAGE="ai-server",SHORT_SHA="$SUB_SHA" \
            --quiet
